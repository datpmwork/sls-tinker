name: 'Test Platform'
description: 'Run tests for a specific PHP/Laravel/Platform combination'

inputs:
  php-version:
    description: 'PHP version'
    required: true
  laravel-version:
    description: 'Laravel version'
    required: true
  platform:
    description: 'Platform (bref or vapor)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
        coverage: none

    - name: Set environment variables
      shell: bash
      run: |
        PHP_VERSION_TAG="${{ inputs.php-version }}"
        laravel_version="${{ inputs.laravel-version }}"
        platform="${{ inputs.platform }}"

        php_tag="${PHP_VERSION_TAG//./}"
        laravel_tag="${laravel_version//[.*]/}"

        # Convert to numbers and calculate port: 9090 + php_tag + laravel_tag
        base_port=$php_tag$laravel_tag
        # Add offset based on platform
        if [[ "$platform" == "vapor" ]]; then
          port=$((base_port + 1))
        elif [[ "$platform" == "bref" ]]; then
          port=$((base_port + 2))
        else
          port=$base_port
        fi

        echo "PHP_VERSION_TAG=$PHP_VERSION_TAG" >> $GITHUB_ENV
        echo "LARAVEL_VERSION=$laravel_version" >> $GITHUB_ENV
        echo "PHP_VERSION=$php_tag" >> $GITHUB_ENV
        echo "LARAVEL_TAG=$laravel_tag" >> $GITHUB_ENV
        echo "SLS_TINKER_LAMBDA_ENDPOINT=http://localhost:$port" >> $GITHUB_ENV
        echo "PORT=$port" >> $GITHUB_ENV
        echo "PLATFORM=$platform" >> $GITHUB_ENV
        echo "DOCKER_IMAGE=${{ inputs.platform }}-$php_tag-$laravel_tag" >> $GITHUB_ENV

    - name: Create App
      shell: bash
      run: |
        docker build --build-arg PHP_VERSION_TAG=$PHP_VERSION_TAG \
                     --build-arg PHP_VERSION=$PHP_VERSION \
                     --build-arg PHP_LARAVEL_TAG=$LARAVEL_VERSION \
                     -t $DOCKER_IMAGE -f Dockerfile --target ${{ inputs.platform }} .

    - name: Create Docker Instance
      shell: bash
      run: |
        docker run -d --rm -p $PORT:8080 --name $DOCKER_IMAGE $DOCKER_IMAGE artisan

    - name: Execute tests
      shell: bash
      run: |
        composer install
        php vendor/bin/testbench package:sync-skeleton
        SLS_PLATFORM=${{ inputs.platform }} ./vendor/bin/pest

    - name: Stop Lambda Instance
      if: always()
      shell: bash
      run: |
        docker stop ${{ inputs.platform }}-$PHP_VERSION-$LARAVEL_TAG
