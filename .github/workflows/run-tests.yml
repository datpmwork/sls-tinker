name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ 8.1, 8.2, 8.3, 8.4 ]
        laravel: [ 10.*, 11.*, 12.* ]
        stability: [ prefer-stable ]
        exclude:
          # Laravel 11 requires PHP 8.2+
          - laravel: 11.*
            php: 8.1
          # Laravel 12 requires PHP 8.2+
          - laravel: 12.*
            php: 8.1
    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }}

    steps:
      - name: Set environment variables
        run: |
          php_version="${{ matrix.php }}"
          laravel_version="${{ matrix.laravel }}"

          php_tag="${php_version//./}"
          laravel_tag="${laravel_version//[.*]/}"

          # Convert to numbers and calculate port: 9090 + php_tag + laravel_tag
          port=$((php_tag + laravel_tag))

          echo "PHP_VERSION=$php_version" >> $GITHUB_ENV
          echo "LARAVEL_VERSION=$laravel_version" >> $GITHUB_ENV
          echo "PHP_TAG=$php_tag" >> $GITHUB_ENV
          echo "LARAVEL_TAG=$laravel_tag" >> $GITHUB_ENV
          echo "TINKER_LAMBDA_ENDPOINT=http://localhost:$port" >> $GITHUB_ENV
          echo "PORT=$port" >> $GITHUB_ENV

      - name: Checkout package code
        uses: actions/checkout@v4
        with:
          path: ../package

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Install dependencies & Laravel App
        run: |
          composer create-project "laravel/laravel:${{ matrix.laravel }}" --no-interaction .
          composer require bref/bref:^2 --no-interaction
          php artisan key:generate

      - name: Install package from local path
        run: |
          # Add local package to composer.json
          composer config repositories.local path ../package
          composer require datpmwork/sls-tinker:@dev

      - name: Create Lambda Instance
        run: |
          docker build -t app-$PHP_TAG-$LARAVEL_TAG -f ../package/tests/Dockerfile --build-arg PHP_VERSION=$PHP_TAG ../
          docker run -d --rm -p $PORT:8080 \
            --name app-$PHP_TAG-$LARAVEL_TAG \
            app-$PHP_TAG-$LARAVEL_TAG artisan

      - name: Execute tests
        working-directory: ../package
        run: |
          composer install
          php vendor/bin/testbench package:sync-skeleton
          ./vendor/bin/pest

      - name: Stop Lambda Instance
        run: |
          docker stop app-$PHP_TAG-$LARAVEL_TAG
